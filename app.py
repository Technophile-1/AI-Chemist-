import os
from dotenv import load_dotenv
import streamlit as st
from PIL import Image
import google.generativeai as genai
import sqlite3

# Load environment variables from .env file
load_dotenv()

# Configure the Google Generative AI API
genai.configure(api_key=os.getenv("GOOGLE_API_KEY"))

# Function to load Google Gemini Pro Vision API and get response
def get_gemini_response(image, prompt):
    try:
        model = genai.GenerativeModel('gemini-2.0-flash')
        response = model.generate_content([prompt, image])
        return response.text
    except Exception as e:
        return f"Error generating response: {str(e)}"

# Function to set up the input image
def input_image_setup(uploaded_file):
    if uploaded_file is not None:
        from PIL import Image
        import io
        image = Image.open(io.BytesIO(uploaded_file.getvalue()))
        return image
    else:
        raise FileNotFoundError("No file uploaded")

# Function to create or update the database schema
def create_or_update_db():
    conn = sqlite3.connect('responses.db')
    c = conn.cursor()
    # Create table if it doesn't exist
    c.execute('''CREATE TABLE IF NOT EXISTS responses (
                 image_name TEXT, 
                 response TEXT
               )''')
    conn.commit()
    conn.close()

# Function to save response to database
def save_response_to_db(image_name, response):
    conn = sqlite3.connect('responses.db')
    c = conn.cursor()
    # Insert data into the table
    c.execute("INSERT INTO responses (image_name, response) VALUES (?, ?)", 
              (image_name, response))
    conn.commit()
    conn.close()

# ...existing code...

# Streamlit UI
st.set_page_config(page_title="AI Chemist App", layout="wide")

# AI Warning Description (Start)
st.warning("""
**Disclaimer:** The information provided by this application is generated by an AI model and is for informational purposes only. 
It should not be considered as professional medical advice. Always consult a licensed healthcare professional for medical concerns.
""")

st.header("AI Chemist App")

# Create or update the database schema
create_or_update_db()

# Upload image
uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])

image_parts = None
if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption="Uploaded Image.", use_column_width=True)
    image_parts = input_image_setup(uploaded_file)

# Button
submit = st.button("Analyze")

if submit and image_parts:
    input_prompt = """
    You are an expert pharmaceutical/Chemist tasked with analyzing images of tablets. Upon examining the uploaded image, provide comprehensive details about the tablets depicted using the following structure:

    1. Examine the image carefully to identify all visible tablets, including their shape, size, color, and imprints.
    2. Identify each tablet precisely, using a pharmaceutical database (if available) for accurate recognition.
    3. Provide detailed descriptions of the following for each tablet:
       - Generic and brand names.
       - Uses and functionalities, including its active ingredients and medical purposes.
       - Recommended dosage and mode of administration.
       - Precautionary information, including any common side effects and potential allergic reactions.
       - Storage guidelines for maintaining tablet potency.
    4. Offer insights into the tabletâ€™s intended purposes and typical applications, including medical conditions they treat or alleviate.
    5. Highlight any notable specifications or distinguishing characteristics, such as unique shapes, special coatings (e.g., enteric coating), or controlled-release formulations.
    6. If applicable, describe any contraindications, warnings, or notable drug interactions associated with each tablet.
    7. Include alternative medications or substitutes that might provide similar benefits, if possible.
    8. Mention any relevant details for users seeking additional resources, such as local pharmacies, online drug information databases, or health consultation options.
    9. Ensure clarity and conciseness in your descriptions while focusing on providing actionable and essential information to the user.
    10. Always prioritize user safety by explicitly advising users to consult healthcare professionals before making decisions about their medication.
    """

    with st.spinner("Analyzing the image..."):
        response = get_gemini_response(image_parts, input_prompt)
        st.subheader("Analysis Result")
        st.write(response)

        # Save response to database
        save_response_to_db(uploaded_file.name, response)

        # Additional Feature: Fetch Most Useful Information
        st.subheader("Most Useful Information")
        useful_prompt = """
        Based on the analysis of the tablet, provide the most important and useful information for the user, including:
        - Key benefits of the medicine.
        - How to use the medicine effectively.
        - Common side effects and how to manage them.
        - Any critical warnings or precautions.
        - Alternative medicines, if applicable.
        """
        with st.spinner("Fetching useful information..."):
            useful_info = get_gemini_response(image_parts, useful_prompt)
            st.write(useful_info)

        # New Feature: Dietary Suggestions
        st.subheader("Dietary Suggestions")
        dietary_prompt = """
        Based on the analysis of the tablet, provide dietary suggestions for the user. Include:
        - Fruits or foods that should be avoided when taking the tablet.
        - Natural sources of vitamins or nutrients that can help avoid the need for the tablet.
        - General dietary tips to maintain a healthy and fit lifestyle.
        """
        with st.spinner("Fetching dietary suggestions..."):
            dietary_suggestions = get_gemini_response(image_parts, dietary_prompt)
            st.write(dietary_suggestions)

# AI Warning Description (End)
st.warning("""
**Disclaimer:** The results generated by this application are based on AI analysis and may not always be accurate or complete. 
Users are strongly advised to consult a healthcare professional for any medical decisions or concerns.
""")